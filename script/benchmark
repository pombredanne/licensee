#!/usr/bin/env ruby

require_relative "../lib/licensee"
require_relative "../test/functions"
require 'benchmark'

puts "Begining benchmark...\n"

# Warm up the license list
Benchmark.bm(12) do |benchmark|
  benchmark.report("Load:") { Licensee::Licenses.list }
end

puts "\n#{Licensee::Licenses.list.count} licenses loaded\n"

licenses = Dir["#{Licensee::Licenses.base}/*"].shuffle

puts "\nBenchmarking vendored licenses...\n"

Benchmark.bm(12, "sum:", "average:") do |benchmark|
  times = []
  licenses.each do |path|
    license_name = File.basename(path, ".txt")
    blob = FakeBlob.new license_from_path(path)
    time = benchmark.report(license_name) do
      license_file = Licensee::LicenseFile.new(blob)
      license_file.match
    end
    times.push time
  end
  sum = times.inject(nil) { |sum, t| sum.nil? ? sum = t : sum += t }
  avg = sum / times.size
  [sum, avg]
end

puts "\nBenchmarking fixtures...\n"

Benchmark.bm(12, "sum:", "average:") do |benchmark|
  times = []
  Dir["test/fixtures/*"].each do |dir|
   times.push benchmark.report(dir.split("/")[-1]) {
     Licensee.license(dir)
   }
  end
  sum = times.inject(nil) { |sum, t| sum.nil? ? sum = t : sum += t }
  avg = sum / times.size
  [sum, avg]
end

puts "\nBenchmarking modified licenses..."

Benchmark.bm(12, "sum:", "average:") do |benchmark|
  times = []
  licenses.each do |path|
    license_name = File.basename(path, ".txt")
    license_contents = license_from_path(path)
    license_contents = chaos_monkey(license_contents)
    blob = FakeBlob.new license_contents
    time = benchmark.report(license_name) do
      license_file = Licensee::LicenseFile.new(blob)
      license_file.match
    end
    times.push time
  end
  sum = times.inject(nil) { |sum, t| sum.nil? ? sum = t : sum += t }
  avg = sum / times.size
  [sum, avg]
end

puts "\nBenchmarking rewrapped licenses..."

Benchmark.bm(12, "sum:", "average:") do |benchmark|
  times = []
  licenses.each do |path|
    license_name = File.basename(path, ".txt")
    license_contents = license_from_path(path)
    license_contents = wrap(license_contents, 50)
    blob = FakeBlob.new license_contents
    time = benchmark.report(license_name) do
      license_file = Licensee::LicenseFile.new(blob)
      license_file.match
    end
    times.push time
  end
  sum = times.inject(nil) { |sum, t| sum.nil? ? sum = t : sum += t }
  avg = sum / times.size
  [sum, avg]
end

puts "\nBenchmarking rewrapped and modified licenses..."

Benchmark.bm(12, "sum:", "average:") do |benchmark|
  times = []
  licenses.each do |path|
    license_name = File.basename(path, ".txt")
    license_contents = license_from_path(path)
    license_contents = wrap(license_contents, 50)
    license_contents = chaos_monkey(license_contents)
    blob = FakeBlob.new license_contents
    time = benchmark.report(license_name) do
      license_file = Licensee::LicenseFile.new(blob)
      license_file.match
    end
    times.push time
  end
  sum = times.inject(nil) { |sum, t| sum.nil? ? sum = t : sum += t }
  avg = sum / times.size
  [sum, avg]
end
